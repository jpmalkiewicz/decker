// This mission turns itself into one of the missions from Decker 1.12 when it
// becomes available. All the missions in the five standard_mission_*.files are
// identical. This means there may be five Decker 1.12 missions available at
// any given time.

english
	available = true
	reload_when_over = true
	

	if player.standard_mission_data == UNDEFINED

		player.standard_mission_data = COLLECTION
		player.standard_mission_data.current_target = ARRAY     // stores the target system of each standard mission to make sure no two missions have the same target system
		
		
		GLOBAL.SYSTEM_IN_USE = FUNCTION (id)
			return_value = false
			i = 0
			while i < player.standard_mission_data.current_target.size
				if player.standard_mission_data.current_target[i] == player.standard_mission_data.system[id]
					return_value = true
				i = i + 1
		
		
		GLOBAL.MARK_SYSTEM_IN_USE = FUNCTION (system)
			// look for an available array slot
			i = player.standard_mission_data.current_target.size-1
			while i > -1 && player.standard_mission_data.current_target[i] != UNDEFINED
				i = i - 1
			if i > -1
				player.standard_mission_data.current_target[i] = system
			else
				player.standard_mission_data.current_target[]  = system      // the array is full, so we'll add a new array slot
		

		GLOBAL.UNMARK_SYSTEM_IN_USE = FUNCTION (system)
			i = player.standard_mission_data.current_target.size-1
			while i > -1
				if player.standard_mission_data.current_target[i] == system
					player.standard_mission_data.current_target[i] = UNDEFINED
					i = -1    // stop searching, just in case the target system appears more than once in the list (shouldn't ever happen)
				i = i - 1
				
				
		createSystem = FUNCTION (xname,xtype)
			return_value = SYSTEM
				name = xname
				type = xtype


		// define the 100 potential target systems
		player.standard_mission_data.system = ARRAY
			createSystem(  "General Genetics",                       MEDICAL          ) // system 0
			createSystem(  "Radio Shack",                            CONSUMER         )
			createSystem(  "Digital Systems",                        ELECTRONICS      )
			createSystem(  "Ron's Repos",                            CONSUMER         )
			createSystem(  "Bubba's Discount Bait & Tackle",         CONSUMER         )
			
			createSystem(  "North Carolina State University",        SCHOOL           ) // system 5
			createSystem(  "Sperm & Ova Superstore",                 CONSUMER         )
			createSystem(  "Ahab's Quickie Mart",                    CONSUMER         )
			createSystem(  "Kellog-Post",                            CONSUMER         )
		    createSystem(  "Smith & Wesson",                         MANUFACTURING    )
		    
		    createSystem(  "Meg-Lo-art",                             CONSUMER         ) // system 10
		    createSystem(  "ACME Industries",                        MANUFACTURING    )
			createSystem(  "PETA's Flaky Granolas",                  CONSUMER         )
			createSystem(  "SAAB",                                   MANUFACTURING    )
			createSystem(  "Winchester",                             MANUFACTURING    )
			
			createSystem(  "Limbs-R-Us",                             MEDICAL          ) // system 15
			createSystem(  "Oxford University",                      SCHOOL           )
			createSystem(  "Little Robot Factory",                   ELECTRONICS      )
			createSystem(  "Henson's Toxic Waste Disposal",          ENVIRONMENTAL    )
			createSystem(  "Kraft",                                  CONSUMER         )
			
			createSystem(  "Nike-Adidas",                            MANUFACTURING    ) // system 20
			createSystem(  "Me, Myself & I Cloning",                 LAB              )
			createSystem(  "Luke's 'Danger Boy' RV's",               MANUFACTURING    )
			createSystem(  "Kentucky Fried Rodents",                 CONSUMER         )
			createSystem(  "Remington",                              MANUFACTURING    )
			
			createSystem(  "Antarctica Bank & Trust",                BANK             ) // system 25
			createSystem(  "CalTech",                                SCHOOL           )
			createSystem(  "Noah's Livestock Engineering",           MEDICAL          )
			createSystem(  "Mueller-Schluter Infotech",              ELECTRONICS      )
			createSystem(  "Microdeck Technologies",                 ELECRONICS       )
			
			createSystem(  "McWendys",                               CONSUMER         ) // system 30
			createSystem(  "Multiplicity Cloning",                   MEDICAL          )
			createSystem(  "Spacely's Sprockets",                    MANUFACTURING    )
			createSystem(  "Cross Applied Technologies",             ELECTRONICS      )
			createSystem(  "Mattel",                                 CONSUMER         )
			
			createSystem(  "Walt Disney",                            CONSUMER         ) // system 35
			createSystem(  "Watson Electronics",                     ELECTRONICS      )
			createSystem(  "Transys Neuronet",                       ELECTRONICS      )
			createSystem(  "Chevron",                                OIL              )
			createSystem(  "Harley-Davidson",                        MANUFACTURING    )
			
			createSystem(  "Texaco",                                 OIL              ) // system 40
			createSystem(  "Shockwave Behavior Management",          MEDICAL          )
			createSystem(  "Black Mesa Research Facilities",         LAB              )
			createSystem(  "Shiawise",                               ELECTRONICS      )
			createSystem(  "Kurita Labs",                            LAB              )
			
			createSystem(  "Intel-TI",                               ELECTRONICS      ) // system 45
			createSystem(  "Cybernetic Prosthetics",                 MEDICAL          )
			createSystem(  "Envirocon",                              ENVIRONMENTAL    )
			createSystem(  "Steiner-Davion Robotics",                MAUFACTURING     )
			createSystem(  "Yamatetsu",                              ELECTRONICS      )

			createSystem(  "Yamaha",                                 MANUFACTURING    ) // system 50
			createSystem(  "Warren Pharmaceuticals",                 LAB              )
			createSystem(  "Sara Lee",                               MEGACORP         )
			createSystem(  "Heckler & Koch",                         MANUFACTURING    )
			createSystem(  "Consolidated Asteroid Mining",           MANUFACTURING    )

			createSystem(  "Exxon",                                  OIL              ) // system 55
			createSystem(  "NASA Spaceyachts",                       MANUFACTURING    )
			createSystem(  "Soilant Products",                       LAB              )
			createSystem(  "Corning",                                MANUFACTURING    )
			createSystem(  "Lear",                                   MANUFACTURING    )

			createSystem(  "Ewing Oil",                              OIL              ) // system 60
			createSystem(  "New Earth Terraforming",                 ENVIRONMENTAL    )
			createSystem(  "Procter & Gamble",                       LAB              )
			createSystem(  "Cessna",                                 MANUFACTURING    )
			createSystem(  "Sendanku",                               MANUFACTURING    )
			
			createSystem(  "Sony",                                   ELECTRONICS      ) // system 65
			createSystem(  "Bayer Pharmaceuticals",                  LAB              )
			createSystem(  "Lunar Waste Disposal",                   ENVIRONMENTAL    )
			createSystem(  "Fisher-Rosemont",                        ELECTRONICS      )
			createSystem(  "Motorola",                               ELECTRONICS      )
			
			createSystem(  "Bank of AmeriCanada",                    BANK             ) // system 70
			createSystem(  "CytoTech Labs",                          LAB              )
			createSystem(  "Siemens",                                ELECTRONICS      )
			createSystem(  "Fuchi",                                  MEGACORP         )
			createSystem(  "Federated Boeing",                       MANUFACTURING    )

			createSystem(  "Ford",                                   MANUFACTURING    ) // system 75
			createSystem(  "Massachussets Institute of Technology",  SCHOOL           )
			createSystem(  "Johnson & Johnson",                      MEGACORP         )
			createSystem(  "Phillip-Morris Pharmaceuticals",         MEDICAL          )
			createSystem(  "Integrated Matrix Systems",              ELECTRONICS      )
			
			createSystem(  "Cyberdine",                              ELECTRONICS      ) // system 80
			createSystem(  "IBM",                                    ELECTRONICS      )
			createSystem(  "European Financial Conglomeration",      BANK             )
			createSystem(  "Aztechnology",                           ELECTRONICS      )
			createSystem(  "Chrysler-Nissan",                        MANUFACTURING    )
			
			createSystem(  "Toyota",                                 MANUFACTURING    ) // system 85
			createSystem(  "Gaeatronics",                            ELECTRONICS      )
			createSystem(  "Pepsi Cola",                             MANUFACTURING    )
			createSystem(  "CryoTech",                               MEDICAL          )
			createSystem(  "Ares Macrotechnology",                   ELECTRONICS      )
			
			createSystem(  "Weyland-Yutani",                         MEGACORP         ) // system 90
			createSystem(  "ChildVision Embryonic Design",           MEDICAL          )
			createSystem(  "Coca Cola",                              CONSUMER         )
			createSystem(  "Zuerich Orbital Gemeinschafts-Bank",     BANK             )
			createSystem(  "Renraku",                                MEGACORP         )
			
			createSystem(  "Novatech",                               MEGACORP         ) // system 95
			createSystem(  "Mitsuhama",                              MEGACORP         )
			createSystem(  "Bell Labs",                              LAB              )
			createSystem(  "World Banking Consortium",               BANK             )
			createSystem(  "Saeder-Krupp",                           MEGACORP         )

		// give every target system a rating
		a = 0
		while a < 100
			player.standard_mission_data.system[a].rating = a/5 + 1
			a = a + 1


	// the actual mission initialization happens when this trigger is executed
	trigger status == AVAILABLE
		deadline = random(0,4)

		flags = ""      // this variable will be used to collect the different flags for this mission
		goal_count = 1


		// make the target system rating similar to the player's base_mission_rating
		b = player.mission_base_rating + ( random(0,9) == 0 ? 0 : random(-1,1) + random(-1,1) )
		if b < 1
			b = 1
		if b > 20
			b = 20
		// pick a system with the chosen rating that is not currently used by another standard mission
		a = (b-1) * 5 + random(0,4)
		while SYSTEM_IN_USE(a)
			a = a + 1
			if a / 5 * 5 == a
				a = a - 5
		target_system = player.standard_mission_data.system[a]
		MARK_SYSTEM_IN_USE(target_system)


		// check whether the default mission goal should be used
		if target_system.type.default_mission_target != UNDEFINED && random(1,100) <= target_system.type.default_mission_target.probability
			b = target_system.type.default_mission_target
		else
			b = UNDEFINED
		a = random(1,100)

		// generate the mission goal
		if b.category == "file" ||( b == UNDEFINED && a <= 45 )              // the mission target is a file
			if b != UNDEFINED
				b = b.name
			else
				b = target_system.type.file[random(0,target_system.type.file.size-1)]
				
			if random(1,40) <= target_system.rating
				goal_count = random(2,5)
				flags = flags + goal_count
				
			if a < 15
				title = "Steal Files"
				description = "A client needs access to "+b+" from the "+target_system.name+" system. You must recover a copy of this data."
				a = 0
				while a < goal_count
					a = a + 1
					goal[] = DOWNLOAD_FILE
						target = FILE
							description = b
			else if a < 25
				title = "Steal & Erase Files"
				description = "A client desires sole access to "+b+" from the "+target_system.name+" system. You must recover a copy of this data and erase it from the system."
				a = 0
				while a < goal_count
					a = a + 1
					goal[] = DOWNLOAD_AND_ERASE_FILE
						target = FILE
							description = b
			else if a < 35
				title = "Erase Files"
				description = "A client wishes to destroy "+b+" located on the "+target_system.name+" system. You must locate this data and erase it from the system."
				a = 0
				while a < goal_count
					a = a + 1
					goal[] = ERASE_FILE
						target = FILE
							description = b
			else
				title = "Edit Files"
				description = "A client wishes to alter "+b+" located on the "+target_system.name+" system. You must locate this data in the system and edit it to the client's specifications."
				a = 0
				while a < goal_count
					a = a + 1
					goal[] = EDIT_FILE
						target = FILE
							description = b
							
			if goal_count > 1
				description = description + " There will be " + goal_count + " targets."

			if ( goal[0].structure_type != "EDIT_FILE" && random(1,5) == 1 ) || ( goal[0].structure_type == "EDIT_FILE" && random(1,5) <= 2 )
				goal[] = goal[0]
				goal[0] = NO_RED_ALARM
				flags = flags + "N"
				description = description + " The target system must not become aware of any tampering."


		else if ( b != UNDEFINED && b.category != "file" ) || ( b == UNDEFINED && a < 85 )          // the target is an IO node
			// determine the mission target
			if b != UNDEFINED
				c = b.category
				b = b.name
			else
				// pick a random IO node type
				a = random (0,target_system.type.deactivate_io_target.size + target_system.type.activate_io_target.size + target_system.type.sabotage_io_target.size - 1)
				if a < target_system.type.deactivate_io_target.size
					b = target_system.type.deactivate_io_target[a]
					c = "deactivate_io_target"
				else
					a = a - target_system.type.deactivate_io_target.size
					if a < target_system.type.activate_io_target.size
						b = target_system.type.activate_io_target[a]
						c = "activate_io_target"
					else
						b = target_system.type.sabotage_io_target[a-target_system.type.activate_io_target.size]

						c = "sabotage_io_target"

			if random(1,40) <= target_system.rating
				goal_count = random(2,5)
				flags = flags + goal_count
			
			if c == "deactivate_io_target"
				title = "Deactivate I/O"
				if goal_count == 1
					description = "A client wishes to deactivate "+b+" from the "+target_system.name+" system. You must locate the I/O node controlling this and deactivate it."
				else
					description = "A client wishes to deactivate "+b+" from the "+target_system.name+" system. You must locate the "+goal_count+" I/O nodes controlling this and deactivate them."
			else if c == "activate_io_target"
				title = "Activate I/O"
				if goal_count == 1
					description = "A client wishes to activate "+b+" from the "+target_system.name+" system. You must locate the I/O node controlling this and activate it."
				else
					description = "A client wishes to activate "+b+" from the "+target_system.name+" system. You must locate the "+goal_count+" I/O nodes controlling this and activate them."
			else
				title = "Sabotage"
				if goal_count == 1
					description = "A client wishes to sabotage "+b+" at the "+target_system.name+" system. You must locate the I/O node controlling this and sabotage it."
				else
					description = "A client wishes to sabotage "+b+" at the "+target_system.name+" system. You must locate the "+goal_count+" I/O nodes controlling this and sabotage them."
			
			a = 0
			while a < goal_count
				a = a + 1
				goal[] = MANIPULATE_IO
// target should be a node, not a node description !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					target = b
					incomplete = (c == "deactivate_io_target") ? "IO node has not been deactivated" : (c == "activate_io_target") ? "IO node has not been activated" : "IO node has not been sabotaged"
					completed  = (c == "deactivate_io_target") ? "IO node has been deactivated"     : (c == "activate_io_target") ? "IO node has been activated"     : "IO node has been sabotaged"

			if random(1,5) == 1
				goal[] = goal[0]
				goal[0] = NO_RED_ALARM
				flags = flags + "N"
				description = description + " The target system must not become aware of any tampering."


		else if a < 90
			title = "Crash System"
			description = "A client wishes to crash the "+target_system.name+" system. You must locate the CPU of the system and initiate a system failure."
			goal[] = CRASH_SYSTEM
			
			
		else if a < 95
			title = "Create Backdoor"
			description = "A client wishes for a new backdoor to be created into the "+target_system.name+" system. You must locate the CPU for the system and create this back door. The client's decker will take care of the rest."
			goal[] = CREATE_BACKDOOR
			if random(1,2) == 1
				goal[] = goal[0]
				goal[0] = NO_RED_ALARM
				flags = flags + "N"
				description = description + " The target system must not become aware of any tampering."


		else
			title = "Run Program"
			
			// create the program the player will have to run
			// base the name of the hack program on the index of the target system so we don't get duplicate names
			c = player.standard_mission_data.system.size-1
			while player.standard_mission_data.system[c] != target_system
				c = c - 1
			c = random("a","z") + random("a","z") + random("a","z") + c + random(0,9) + random(0,9) + random(0,9) + random(0,9)
			b = THING
				name = "Client Program " + c
				item_rating = target_system.rating
				size = item_rating * 4
				status = INSTALLED
				type = THING_TYPE
					value = 0
					type = ARRAY
						SPECIAL

			a = random(1,3)   // 1 = IO node, 2 = DS node, 3 = CPU
			if a != 3 && random(1,40) <= target_system.rating
				goal_count = random(2,5)
				flags = flags + goal_count
				description = "A client needs a special program activated on the "+target_system.name+" system. Locate the target nodes by running the program, then activate the program within each nodes. You must remain in each target node until the program has finished running. Upon accepting the mission you will receive the client's program "+c+"."
			else
				description = "A client needs a special program activated on the "+target_system.name+" system. Locate the target node by running the program, then activate the program within the node. You must remain in the node until the program has finished running. Upon accepting the mission you will receive the client's program "+c+"."
				
			c = 0
			while c < goal_count
				c = c + 1
				goal[] = RUN_PROGRAM
// run program target must be a node, not a node description !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
					target = a
					program = b
					execution_time = 6 + b.item_rating / 2
					incomplete = "Program has not been run in node"
					completed = "Program was successfully run in node"
				
			if random(1,5) == 1
				goal[] = goal[0]
				goal[0] = NO_RED_ALARM
				flags = flags + "N"
				description = description + " The target system must not become aware of any tampering."
				


		// if the target system rating is 5 or higher, there's a 10% chance that the mission will be timed
		if target_system.rating >= 5 && random(1,10) == 1
			flags = flags + "T"
			deadline = 0
			a = goal[0].structure_type == "NO_RED_ALARM" ? 1 : 0
			goal[] = goal[a]
			goal[a] = TIME_RESTRICTION
				end_time = 180 * ((target_system.rating+3)/4)       // 3 minutes per area within the target system
			description = description + " The mission must be completed within "+(goal[a].end_time/60)+" minutes of system entry."
		

		// append the mission flags to the title
		if flags != ""
			title = title + " (" + flags + ")"


		payment = (120 - 10*deadline) * ( DEFAULT_MISSION_RATING() + player.lifestyle ) * (85 + random(0,30)) / 100
	
	
	trigger status == DESTROYED
		UNMARK_SYSTEM_IN_USE(target_system)
