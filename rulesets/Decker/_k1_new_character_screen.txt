english
	RULESET.new_character_screen = COMPONENT
		title = "Decker - New Character"
		width = 260
		height = 260
		//**************************** data for the character image selector *****************************
		char_images = filelist("artwork/character_image/")   // this variable stores the list of available character images, the screen display class doesn't recognize it
		char_image_index = 0
		char_image = IMAGE     // the player icon
			x = 27
			image = "character_image/"+char_images[char_image_index]
		//********************************* data for the bonus selector ***********************************
		LOCAL.bonus_text = ARRAY
			"Hardware"
			"Software"
			"Skills"
			"Money"
			"Nothing"
		selected_bonus = 0
		bonus_name = ARRAY
			"hardware"
			"software"
			"skills"
			"money"
			"nothing"
		bonus_button_group = ARRAY
		adjust_button = FUNCTION (button, is_selected)
			if is_selected == true
				// it is selected, mark it
				button.idle.font = @TEXT_STYLE_BOLD.font
				button.idle.color = @NCS_SELECTED_SKILL_COLOR
				button.pressed.font = button.idle.font
				button.pressed.color = button.idle.color
			else
				// it is not selected, unmark it
				button.idle.font = @TEXT_STYLE.font
				button.idle.color = @NCS_UNSELECTED_SKILL_COLOR
				button.pressed.font = @TEXT_STYLE_BOLD.font
				button.pressed.color = @NCS_PRESSED_SKILL_COLOR
		LOCAL.bonus_button_function = FUNCTION
			with new_character_screen
				// mark this button and unmark the old selected button unless it's the same button
				if selected_bonus != id
					adjust_button(bonus_button_group[selected_bonus],false)
					adjust_button(bonus_button_group[id],true)
					selected_bonus = id
		//********************************* data for the toggle buttons **********************************
		ironman = false
		tooltips = true
		adjust_on_off_text = FUNCTION (string,is_on)
			if is_on
				string.text = "on"
				string.color = @NCS_ON_COLOR
			else
				string.text = "off"
				string.color = @NCS_OFF_COLOR
		//********************************* data for the character name **********************************
		char_name = TEXTFIELD
			x = 60
			y = 52
			width = 178
			height = 20
			text = "Hacker X"
			font = @TEXT_STYLE_BOLD.font
			color = @NCS_USER_INPUT_COLOR
			cursor = IMAGE
				image = "new_character/cursor"
		//************************************************************************************************
		component = ARRAY
			SCREEN_BACKGROUND
			BORDER
				x = 29
				y =  121
				width = 82
				height = 28
				inverted = true
				background_color = @NCS_IMAGE_BACKGROUND_COLOR
				component = ARRAY
					char_image
					BORDER_BUTTON
						idle = IMAGE
							image = "arrow_w0"     // image for the idle state of the button. the pressed button image will be "home/arrow1" if that image exists
						on_mouse_up = FUNCTION
							with new_character_screen
								if char_image_index == 0
									char_image_index = char_images.size - 1
								else
									char_image_index = char_image_index - 1
								char_image.image = "character_image/"+char_images[char_image_index]
					BORDER_BUTTON
						x = 54
						idle = IMAGE
							image = "arrow_e0"
						on_mouse_up = FUNCTION
							with new_character_screen
								if char_image_index == char_images.size - 1
									char_image_index = 0
								else
									char_image_index = char_image_index + 1
								char_image.image = "character_image/"+char_images[char_image_index]
			createBorder(55, 47, 187, 24, @NCS_USER_INPUT_BACKGROUND_COLOR, true)
			char_name
			createText("New Decker Character", CENTER, 18)
			createText("Name", 17, 51)
			createText("Starting Bonus", 179, 83, , , CENTER)
			createText("Character", 70,  83, , , CENTER)
			createText("Image", 70,  99, , , CENTER)
			BUTTON
				x = CENTER
				y = 207
				width = 105
				height = 15
				idle = createText("Ironman Mode", 0, 0, @NCS_OPTION_TEXT_COLOR)
				pressed = createText("Ironman Mode", 0, 0, @NCS_PRESSED_OPTION_TEXT_COLOR)
				hover = pressed
				on_off_text = createTextBold(UNDEFINED, RIGHT, 0)
				component = ARRAY
					on_off_text
				on_mouse_up = FUNCTION
					with new_character_screen
						ironman = !ironman
						adjust_on_off_text(on_off_text,ironman)
				adjust_on_off_text(on_off_text,ironman)        // sets the initial text and color for the on/off text
			BUTTON
				x = CENTER
				y = 227
				width = 105
				height = 15
				idle = createText("Tooltips", 0, 0, @NCS_OPTION_TEXT_COLOR)
				pressed = createText("Tooltips", 0, 0, @NCS_PRESSED_OPTION_TEXT_COLOR)
				hover = pressed
				on_off_text = createTextBold(UNDEFINED, RIGHT, 0)
				component = ARRAY
					on_off_text
				on_mouse_up = FUNCTION
					with new_character_screen
						tooltips = !tooltips
						adjust_on_off_text(on_off_text,tooltips)
				adjust_on_off_text(on_off_text,tooltips)      // sets the initial text and color for the on/off text
			BORDER_BUTTON
				x = 219
				y = 219
				idle = IMAGE
					image = "ok0"
				on_mouse_up = FUNCTION
					with new_character_screen
// create the new character START
						GLOBAL.tooltips = tooltips
						GLOBAL.ironman = ironman
						GLOBAL.player = HUMAN
							name = char_name.text
							image = char_image.image
							LOCAL.slvl = bonus_name[selected_bonus] == "software" ? 2 : 1
							LOCAL.hlvl = bonus_name[selected_bonus] == "hardware" ? 2 : 1
							deck = createDeck(hlvl, slvl)
							if bonus_name[selected_bonus] == "skills"
								attack = 2
								defense = 2
								stealth = 2
								analysis = 2
								programming = 2
								chip_design = 2
							money = bonus_name[selected_bonus] == "money" ? 2000 : 100
// debug stuff START
							physical_damage = 3
							money = money + 35000
							skill_points = 8
// debug stuff END
						updateShopInventory()
// create the new character END
					displayScreen(home_screen)
			BORDER_BUTTON
				x = 17
				y = 219
				idle = IMAGE
					image = "cancel0"
				on_mouse_up = &exit_program
		for i = 0 to bonus_name.size-1
			bonus_button_group[] = BUTTON
				x = 145
				y = 105+i*18
				width = 67
				height = 15
				id = i
				idle = createText(bonus_text[i], CENTER, CENTER)
				pressed = createText(bonus_text[i], CENTER, CENTER)
				hover = pressed
				on_mouse_up = &bonus_button_function
			component[] = bonus_button_group[i]
			adjust_button(bonus_button_group[i], i==0)
