english
	RULESET.shop_screen = COMPONENT
		title = "Decker - Thrifty Electronics"
		width = 540
		height = 350

		char_money_caption = createText("Money", 20, 15)
		char_money = createText("", 20+pixelwidth(char_money_caption)+20, 15)
		item_table_caption = createTextBold("Items for sale", CENTER, 15)
		scrollpane = SCROLLPANE
			x = 20
			y = 60
			width = COMPONENT.width - 2 * 20
			height = COMPONENT.height - y - 80    // make the height relative to the screenheight
			vertical_scrollbar = ARRAY
				"scroller_vertical_blue0"
				"scroller_up_blue0"
				"scroller_down_blue0"

		LOCAL.createTableButton = FUNCTION (_column, _text, _width, _x, _sorting_order_function)
			return_value = BORDER_BUTTON
				x = _x[0]
				y = _x[1] - 20
				idle = createText(_text)
				idle.height = 14
				width = _width
				height = 20
				_x[0] = _x[0] + _width
				sorting_order_function = _sorting_order_function
				column = _column
				on_mouse_up = FUNCTION
					sortTable(scrollpane.displayed_element, sorting_order_function, column, player.shop_inventory)

		LOCAL.table_button_x = ARRAY
			scrollpane.x
			scrollpane.y

		component = ARRAY
			SCREEN_BACKGROUND
				width = COMPONENT.width
				height = COMPONENT.height
			char_money_caption
			char_money
			item_table_caption

			// the software section
			createBorder(scrollpane.x-2, scrollpane.y-22, scrollpane.width+4, scrollpane.height+24, @TABLE_BACKGROUND_COLOR, true)
			scrollpane
			createTableButton(0, "",        19, table_button_x, &compareShopItemsPreset)
			createTableButton(1, "Name",   121, table_button_x, &compareText)
			createTableButton(2, "Type",   100, table_button_x, &compareText)
			createTableButton(3, "Rating",  50, table_button_x, &compareNumbers)
			createTableButton(4, "Current", 50, table_button_x, &compareNumbers)
			createTableButton(5, "Cost",  50, table_button_x, &compareNumbersInverted)
			createTableButton(6, "Avg Cost",  60, table_button_x, &compareNumbersInverted)
			createTableButton(7, "Size",    50, table_button_x, &compareNumbersInverted)

		setup = FUNCTION
			shop_screen.char_money.text = player.money

			// create the new software table ***********************************************************************************************************
			LOCAL.t = createTable ( , 18, 19, 121, 100, 50, 50, 50, 60, 50)
			t.cell_x = createArray (CENTER, 8, CENTER, CENTER, , CENTER, CENTER, CENTER)
			t.cell_y = CENTER
			t.selected_row_background = @TABLE_SELECTED_ROW_BACKGROUND
			t.can_drag_rows = true
			t.selected_row = scrollpane.displayed_element.selected_row
			t.on_row_drag = FUNCTION (table, old_row_index, new_row_index)
				// rearrange the programs in the player deck accordingly
				LOCAL.p = player.deck.program
				LOCAL.backup = p[old_row_index]
				if old_row_index > new_row_index
					for (i = old_row_index; i > new_row_index; i--)
						p[i] = p[i-1]
				else
					for (i = old_row_index; i < new_row_index; i++)
						p[i] = p[i+1]
				p[new_row_index] = backup
			t.on_selection_change = FUNCTION (table, old_selected_row, new_selected_row)
				with shop_screen
					if new_selected_row >= 0 && new_selected_row < table.rows
					else
			LOCAL.p = player.shop_inventory
			for (i = 0; i < p.size; i++)
				addTableRow(t, p[i].type.image, createText(p[i].name,,,@TABLE_TEXT_COLOR), createText(p[i].type.name,,,@TABLE_TEXT_COLOR), createText(p[i].rating,,,@TABLE_TEXT_COLOR), createText("?",,,@TABLE_TEXT_COLOR), createText(p[i].value,,,@TABLE_TEXT_COLOR), createText(p[i].average_value,,,@TABLE_TEXT_COLOR), createText(p[i].size,,,@TABLE_TEXT_COLOR))
			centerRightAlignedTableColumn(t, 3)
			centerRightAlignedTableColumn(t, 4)
			centerRightAlignedTableColumn(t, 5)
			centerRightAlignedTableColumn(t, 6)
			centerRightAlignedTableColumn(t, 7)
			shop_screen.scrollpane.displayed_element = t
